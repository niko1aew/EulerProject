# Следующая повторяющаяся последовательность определена для множества натуральных чисел:
#
# n → n/2 (n - четное)
# n → 3n + 1 (n - нечетное)
#
# Используя описанное выше правило и начиная с 13, сгенерируется следующая последовательность:
#
# 13 → 40 → 20 → 10 → 5 → 16 → 8 → 4 → 2 → 1
# Получившаяся последовательность (начиная с 13 и заканчивая 1) содержит 10 элементов.
# Хотя это до сих пор и не доказано (проблема Коллатца (Collatz)), предполагается,
# что все сгенерированные таким образом последовательности оканчиваются на 1.
#
# Какой начальный элемент меньше миллиона генерирует самую длинную последовательность?
#
# Примечание: Следующие за первым элементы последовательности могут быть больше миллиона.
import Utils


def task_14():
    max_length = 0
    element = 0
    for i in range(1000000, 1, -1):
        length = len(Utils.get_collatz_sequence(i))
        # print(length)
        if length > max_length:
            max_length = length
            element = i
    print('Элемент: ', element, '; Длина последовательности: ', max_length)


Utils.run_task(task_14)
